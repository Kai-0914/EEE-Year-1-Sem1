#include <NewPing.h>
#include <Servo.h>

#define TRIG_PIN 12
#define ECHO_PIN 13
#define SERVO_PIN 5
#define MAX_DISTANCE 20

NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE);
Servo myServo;

int currentAngle = 90; 
int stepSize = 15; 
int closestAngle = 90;
unsigned int minDistance = MAX_DISTANCE; 
unsigned int distance;

const int IN1 = 2; 
const int IN2 = 10; 
const int ENA = 3;   
const int IN3 = A2; 
const int IN4 = A3;   
const int ENB = 11; 
int motorSpeedA = 0;
int motorSpeedB = 0;

void setup() {
  myServo.attach(SERVO_PIN);
  myServo.write(currentAngle);
  delay(500); 
}

void turnMotor(int angle) {
  if (angle < 90) {
    motorSpeedA = 255; 
    motorSpeedB = 255;
    analogWrite(ENA, motorSpeedA);
    analogWrite(ENB, motorSpeedB);
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, HIGH);
  }

  if (angle > 90) {
    motorSpeedA = 255; 
    motorSpeedB = 255;
    analogWrite(ENA, motorSpeedA);
    analogWrite(ENB, motorSpeedB);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, HIGH);
    digitalWrite(IN3, HIGH);
    digitalWrite(IN4, LOW);
  }
}

void stopMotor() {
  motorSpeedA = 0;
  motorSpeedB = 0;
  analogWrite(ENA, motorSpeedA);
  analogWrite(ENB, motorSpeedB);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}


void loop() {
  motorSpeedA = 70;
  motorSpeedB = 70;
  analogWrite(ENA, motorSpeedA);
  analogWrite(ENB, motorSpeedB);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  for (int angle = max(0, currentAngle - 20); angle <= min(180, currentAngle + 20); angle += stepSize) {
    myServo.write(angle);
    delay(50);
    distance = sonar.ping_cm();
    if (distance > 0 && distance < minDistance) {
      minDistance = distance;
      closestAngle = angle;
    }
  }

  if (minDistance < MAX_DISTANCE) {
    currentAngle = closestAngle;
    myServo.write(currentAngle);
    if (distance > 0 && distance <= 10){
      turnMotor(currentAngle);
      delay(110);
      stopMotor();
    } else {
      stopMotor();
    }
  } 

  minDistance = MAX_DISTANCE;
  delay(200);
}
